// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Position.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Proto {

  /// <summary>Holder for reflection information generated from Position.proto</summary>
  public static partial class PositionReflection {

    #region Descriptor
    /// <summary>File descriptor for Position.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PositionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5Qb3NpdGlvbi5wcm90bxIFUHJvdG8aDkV4Y2hhbmdlLnByb3RvGg1SZXF1",
            "ZXN0LnByb3RvGgtSZXBseS5wcm90byLUAQoIUG9zaXRpb24SEgoKaW5zdHJ1",
            "bWVudBgBIAEoCRIhCghleGNoYW5nZRgCIAEoDjIPLlByb3RvLkV4Y2hhbmdl",
            "EhIKCnRvdGFsX2xvbmcYAyABKAUSEwoLbGlxdWlkX2xvbmcYBCABKAUSFgoO",
            "eWVzdGVyZGF5X2xvbmcYBSABKAUSEwoLdG90YWxfc2hvcnQYBiABKAUSFAoM",
            "bGlxdWlkX3Nob3J0GAcgASgFEhcKD3llc3RlcmRheV9zaG9ydBgIIAEoBRIM",
            "CgR0aW1lGAkgASgEIpgBCgtQb3NpdGlvblJlcRIgCgR0eXBlGAEgASgOMhIu",
            "UHJvdG8uUmVxdWVzdFR5cGUSIQoIZXhjaGFuZ2UYAiABKA4yDy5Qcm90by5F",
            "eGNoYW5nZRISCgppbnN0cnVtZW50GAMgASgJEgwKBHVzZXIYBCABKAkSIgoJ",
            "cG9zaXRpb25zGAUgAygLMg8uUHJvdG8uUG9zaXRpb24iTwoLUG9zaXRpb25S",
            "ZXASHAoGcmVzdWx0GAEgASgLMgwuUHJvdG8uUmVwbHkSIgoJcG9zaXRpb25z",
            "GAIgAygLMg8uUHJvdG8uUG9zaXRpb25iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Proto.ExchangeReflection.Descriptor, global::Proto.RequestReflection.Descriptor, global::Proto.ReplyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Position), global::Proto.Position.Parser, new[]{ "Instrument", "Exchange", "TotalLong", "LiquidLong", "YesterdayLong", "TotalShort", "LiquidShort", "YesterdayShort", "Time" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.PositionReq), global::Proto.PositionReq.Parser, new[]{ "Type", "Exchange", "Instrument", "User", "Positions" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.PositionRep), global::Proto.PositionRep.Parser, new[]{ "Result", "Positions" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Position : pb::IMessage<Position> {
    private static readonly pb::MessageParser<Position> _parser = new pb::MessageParser<Position>(() => new Position());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Position> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PositionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Position() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Position(Position other) : this() {
      instrument_ = other.instrument_;
      exchange_ = other.exchange_;
      totalLong_ = other.totalLong_;
      liquidLong_ = other.liquidLong_;
      yesterdayLong_ = other.yesterdayLong_;
      totalShort_ = other.totalShort_;
      liquidShort_ = other.liquidShort_;
      yesterdayShort_ = other.yesterdayShort_;
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Position Clone() {
      return new Position(this);
    }

    /// <summary>Field number for the "instrument" field.</summary>
    public const int InstrumentFieldNumber = 1;
    private string instrument_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Instrument {
      get { return instrument_; }
      set {
        instrument_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exchange" field.</summary>
    public const int ExchangeFieldNumber = 2;
    private global::Proto.Exchange exchange_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.Exchange Exchange {
      get { return exchange_; }
      set {
        exchange_ = value;
      }
    }

    /// <summary>Field number for the "total_long" field.</summary>
    public const int TotalLongFieldNumber = 3;
    private int totalLong_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalLong {
      get { return totalLong_; }
      set {
        totalLong_ = value;
      }
    }

    /// <summary>Field number for the "liquid_long" field.</summary>
    public const int LiquidLongFieldNumber = 4;
    private int liquidLong_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LiquidLong {
      get { return liquidLong_; }
      set {
        liquidLong_ = value;
      }
    }

    /// <summary>Field number for the "yesterday_long" field.</summary>
    public const int YesterdayLongFieldNumber = 5;
    private int yesterdayLong_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int YesterdayLong {
      get { return yesterdayLong_; }
      set {
        yesterdayLong_ = value;
      }
    }

    /// <summary>Field number for the "total_short" field.</summary>
    public const int TotalShortFieldNumber = 6;
    private int totalShort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalShort {
      get { return totalShort_; }
      set {
        totalShort_ = value;
      }
    }

    /// <summary>Field number for the "liquid_short" field.</summary>
    public const int LiquidShortFieldNumber = 7;
    private int liquidShort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LiquidShort {
      get { return liquidShort_; }
      set {
        liquidShort_ = value;
      }
    }

    /// <summary>Field number for the "yesterday_short" field.</summary>
    public const int YesterdayShortFieldNumber = 8;
    private int yesterdayShort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int YesterdayShort {
      get { return yesterdayShort_; }
      set {
        yesterdayShort_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 9;
    private ulong time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Position);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Position other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Instrument != other.Instrument) return false;
      if (Exchange != other.Exchange) return false;
      if (TotalLong != other.TotalLong) return false;
      if (LiquidLong != other.LiquidLong) return false;
      if (YesterdayLong != other.YesterdayLong) return false;
      if (TotalShort != other.TotalShort) return false;
      if (LiquidShort != other.LiquidShort) return false;
      if (YesterdayShort != other.YesterdayShort) return false;
      if (Time != other.Time) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Instrument.Length != 0) hash ^= Instrument.GetHashCode();
      if (Exchange != 0) hash ^= Exchange.GetHashCode();
      if (TotalLong != 0) hash ^= TotalLong.GetHashCode();
      if (LiquidLong != 0) hash ^= LiquidLong.GetHashCode();
      if (YesterdayLong != 0) hash ^= YesterdayLong.GetHashCode();
      if (TotalShort != 0) hash ^= TotalShort.GetHashCode();
      if (LiquidShort != 0) hash ^= LiquidShort.GetHashCode();
      if (YesterdayShort != 0) hash ^= YesterdayShort.GetHashCode();
      if (Time != 0UL) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Instrument.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Instrument);
      }
      if (Exchange != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Exchange);
      }
      if (TotalLong != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TotalLong);
      }
      if (LiquidLong != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(LiquidLong);
      }
      if (YesterdayLong != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(YesterdayLong);
      }
      if (TotalShort != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(TotalShort);
      }
      if (LiquidShort != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(LiquidShort);
      }
      if (YesterdayShort != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(YesterdayShort);
      }
      if (Time != 0UL) {
        output.WriteRawTag(72);
        output.WriteUInt64(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Instrument.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Instrument);
      }
      if (Exchange != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Exchange);
      }
      if (TotalLong != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalLong);
      }
      if (LiquidLong != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LiquidLong);
      }
      if (YesterdayLong != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(YesterdayLong);
      }
      if (TotalShort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalShort);
      }
      if (LiquidShort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LiquidShort);
      }
      if (YesterdayShort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(YesterdayShort);
      }
      if (Time != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Position other) {
      if (other == null) {
        return;
      }
      if (other.Instrument.Length != 0) {
        Instrument = other.Instrument;
      }
      if (other.Exchange != 0) {
        Exchange = other.Exchange;
      }
      if (other.TotalLong != 0) {
        TotalLong = other.TotalLong;
      }
      if (other.LiquidLong != 0) {
        LiquidLong = other.LiquidLong;
      }
      if (other.YesterdayLong != 0) {
        YesterdayLong = other.YesterdayLong;
      }
      if (other.TotalShort != 0) {
        TotalShort = other.TotalShort;
      }
      if (other.LiquidShort != 0) {
        LiquidShort = other.LiquidShort;
      }
      if (other.YesterdayShort != 0) {
        YesterdayShort = other.YesterdayShort;
      }
      if (other.Time != 0UL) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Instrument = input.ReadString();
            break;
          }
          case 16: {
            exchange_ = (global::Proto.Exchange) input.ReadEnum();
            break;
          }
          case 24: {
            TotalLong = input.ReadInt32();
            break;
          }
          case 32: {
            LiquidLong = input.ReadInt32();
            break;
          }
          case 40: {
            YesterdayLong = input.ReadInt32();
            break;
          }
          case 48: {
            TotalShort = input.ReadInt32();
            break;
          }
          case 56: {
            LiquidShort = input.ReadInt32();
            break;
          }
          case 64: {
            YesterdayShort = input.ReadInt32();
            break;
          }
          case 72: {
            Time = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PositionReq : pb::IMessage<PositionReq> {
    private static readonly pb::MessageParser<PositionReq> _parser = new pb::MessageParser<PositionReq>(() => new PositionReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PositionReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PositionReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PositionReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PositionReq(PositionReq other) : this() {
      type_ = other.type_;
      exchange_ = other.exchange_;
      instrument_ = other.instrument_;
      user_ = other.user_;
      positions_ = other.positions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PositionReq Clone() {
      return new PositionReq(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Proto.RequestType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.RequestType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "exchange" field.</summary>
    public const int ExchangeFieldNumber = 2;
    private global::Proto.Exchange exchange_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.Exchange Exchange {
      get { return exchange_; }
      set {
        exchange_ = value;
      }
    }

    /// <summary>Field number for the "instrument" field.</summary>
    public const int InstrumentFieldNumber = 3;
    private string instrument_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Instrument {
      get { return instrument_; }
      set {
        instrument_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 4;
    private string user_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string User {
      get { return user_; }
      set {
        user_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "positions" field.</summary>
    public const int PositionsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Proto.Position> _repeated_positions_codec
        = pb::FieldCodec.ForMessage(42, global::Proto.Position.Parser);
    private readonly pbc::RepeatedField<global::Proto.Position> positions_ = new pbc::RepeatedField<global::Proto.Position>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.Position> Positions {
      get { return positions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PositionReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PositionReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Exchange != other.Exchange) return false;
      if (Instrument != other.Instrument) return false;
      if (User != other.User) return false;
      if(!positions_.Equals(other.positions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Exchange != 0) hash ^= Exchange.GetHashCode();
      if (Instrument.Length != 0) hash ^= Instrument.GetHashCode();
      if (User.Length != 0) hash ^= User.GetHashCode();
      hash ^= positions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Exchange != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Exchange);
      }
      if (Instrument.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Instrument);
      }
      if (User.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(User);
      }
      positions_.WriteTo(output, _repeated_positions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Exchange != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Exchange);
      }
      if (Instrument.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Instrument);
      }
      if (User.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(User);
      }
      size += positions_.CalculateSize(_repeated_positions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PositionReq other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Exchange != 0) {
        Exchange = other.Exchange;
      }
      if (other.Instrument.Length != 0) {
        Instrument = other.Instrument;
      }
      if (other.User.Length != 0) {
        User = other.User;
      }
      positions_.Add(other.positions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            type_ = (global::Proto.RequestType) input.ReadEnum();
            break;
          }
          case 16: {
            exchange_ = (global::Proto.Exchange) input.ReadEnum();
            break;
          }
          case 26: {
            Instrument = input.ReadString();
            break;
          }
          case 34: {
            User = input.ReadString();
            break;
          }
          case 42: {
            positions_.AddEntriesFrom(input, _repeated_positions_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PositionRep : pb::IMessage<PositionRep> {
    private static readonly pb::MessageParser<PositionRep> _parser = new pb::MessageParser<PositionRep>(() => new PositionRep());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PositionRep> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.PositionReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PositionRep() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PositionRep(PositionRep other) : this() {
      Result = other.result_ != null ? other.Result.Clone() : null;
      positions_ = other.positions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PositionRep Clone() {
      return new PositionRep(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::Proto.Reply result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.Reply Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "positions" field.</summary>
    public const int PositionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Proto.Position> _repeated_positions_codec
        = pb::FieldCodec.ForMessage(18, global::Proto.Position.Parser);
    private readonly pbc::RepeatedField<global::Proto.Position> positions_ = new pbc::RepeatedField<global::Proto.Position>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.Position> Positions {
      get { return positions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PositionRep);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PositionRep other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Result, other.Result)) return false;
      if(!positions_.Equals(other.positions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (result_ != null) hash ^= Result.GetHashCode();
      hash ^= positions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (result_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Result);
      }
      positions_.WriteTo(output, _repeated_positions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      size += positions_.CalculateSize(_repeated_positions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PositionRep other) {
      if (other == null) {
        return;
      }
      if (other.result_ != null) {
        if (result_ == null) {
          result_ = new global::Proto.Reply();
        }
        Result.MergeFrom(other.Result);
      }
      positions_.Add(other.positions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (result_ == null) {
              result_ = new global::Proto.Reply();
            }
            input.ReadMessage(result_);
            break;
          }
          case 18: {
            positions_.AddEntriesFrom(input, _repeated_positions_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code

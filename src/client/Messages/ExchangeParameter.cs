// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ExchangeParameter.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Proto {

  /// <summary>Holder for reflection information generated from ExchangeParameter.proto</summary>
  public static partial class ExchangeParameterReflection {

    #region Descriptor
    /// <summary>File descriptor for ExchangeParameter.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ExchangeParameterReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdFeGNoYW5nZVBhcmFtZXRlci5wcm90bxIFUHJvdG8aDkV4Y2hhbmdlLnBy",
            "b3RvGg1SZXF1ZXN0LnByb3RvGgtSZXBseS5wcm90byInCgdIb2xpZGF5EgwK",
            "BGRhdGUYASABKAkSDgoGd2VpZ2h0GAIgASgBIiwKDlRyYWRpbmdTZXNzaW9u",
            "Eg0KBWJlZ2luGAEgASgJEgsKA2VuZBgCIAEoCSK1AgoRRXhjaGFuZ2VQYXJh",
            "bWV0ZXISIQoIZXhjaGFuZ2UYASABKA4yDy5Qcm90by5FeGNoYW5nZRInCghz",
            "ZXNzaW9ucxgCIAMoCzIVLlByb3RvLlRyYWRpbmdTZXNzaW9uEjAKEW1hdHVy",
            "aXR5X3Nlc3Npb25zGAMgAygLMhUuUHJvdG8uVHJhZGluZ1Nlc3Npb24SIAoI",
            "aG9saWRheXMYBCADKAsyDi5Qcm90by5Ib2xpZGF5EhgKEGNoYXJtX3N0YXJ0",
            "X3RpbWUYBSABKAkSEQoJcmZxX2RlbGF5GAYgASgFEhMKC3JmcV90aW1lb3V0",
            "GAcgASgFEhIKCnJmcV92b2x1bWUYCCABKAUSEwoLdHJhZGluZ19kYXkYCSAB",
            "KAkSFQoNbmlnaHRfc2Vzc2lvbhgKIAEoCCKXAQoURXhjaGFuZ2VQYXJhbWV0",
            "ZXJSZXESIAoEdHlwZRgBIAEoDjISLlByb3RvLlJlcXVlc3RUeXBlEiwKCnBh",
            "cmFtZXRlcnMYAiADKAsyGC5Qcm90by5FeGNoYW5nZVBhcmFtZXRlchIhCghl",
            "eGNoYW5nZRgDIAEoDjIPLlByb3RvLkV4Y2hhbmdlEgwKBHVzZXIYBCABKAki",
            "YgoURXhjaGFuZ2VQYXJhbWV0ZXJSZXASLAoKcGFyYW1ldGVycxgBIAMoCzIY",
            "LlByb3RvLkV4Y2hhbmdlUGFyYW1ldGVyEhwKBnJlc3VsdBgCIAEoCzIMLlBy",
            "b3RvLlJlcGx5YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Proto.ExchangeReflection.Descriptor, global::Proto.RequestReflection.Descriptor, global::Proto.ReplyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Holiday), global::Proto.Holiday.Parser, new[]{ "Date", "Weight" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.TradingSession), global::Proto.TradingSession.Parser, new[]{ "Begin", "End" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.ExchangeParameter), global::Proto.ExchangeParameter.Parser, new[]{ "Exchange", "Sessions", "MaturitySessions", "Holidays", "CharmStartTime", "RfqDelay", "RfqTimeout", "RfqVolume", "TradingDay", "NightSession" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.ExchangeParameterReq), global::Proto.ExchangeParameterReq.Parser, new[]{ "Type", "Parameters", "Exchange", "User" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.ExchangeParameterRep), global::Proto.ExchangeParameterRep.Parser, new[]{ "Parameters", "Result" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Holiday : pb::IMessage<Holiday> {
    private static readonly pb::MessageParser<Holiday> _parser = new pb::MessageParser<Holiday>(() => new Holiday());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Holiday> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.ExchangeParameterReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Holiday() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Holiday(Holiday other) : this() {
      date_ = other.date_;
      weight_ = other.weight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Holiday Clone() {
      return new Holiday(this);
    }

    /// <summary>Field number for the "date" field.</summary>
    public const int DateFieldNumber = 1;
    private string date_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Date {
      get { return date_; }
      set {
        date_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "weight" field.</summary>
    public const int WeightFieldNumber = 2;
    private double weight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Weight {
      get { return weight_; }
      set {
        weight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Holiday);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Holiday other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Date != other.Date) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Weight, other.Weight)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Date.Length != 0) hash ^= Date.GetHashCode();
      if (Weight != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Weight);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Date.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Date);
      }
      if (Weight != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Weight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Date.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Date);
      }
      if (Weight != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Holiday other) {
      if (other == null) {
        return;
      }
      if (other.Date.Length != 0) {
        Date = other.Date;
      }
      if (other.Weight != 0D) {
        Weight = other.Weight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Date = input.ReadString();
            break;
          }
          case 17: {
            Weight = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TradingSession : pb::IMessage<TradingSession> {
    private static readonly pb::MessageParser<TradingSession> _parser = new pb::MessageParser<TradingSession>(() => new TradingSession());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TradingSession> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.ExchangeParameterReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TradingSession() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TradingSession(TradingSession other) : this() {
      begin_ = other.begin_;
      end_ = other.end_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TradingSession Clone() {
      return new TradingSession(this);
    }

    /// <summary>Field number for the "begin" field.</summary>
    public const int BeginFieldNumber = 1;
    private string begin_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Begin {
      get { return begin_; }
      set {
        begin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "end" field.</summary>
    public const int EndFieldNumber = 2;
    private string end_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string End {
      get { return end_; }
      set {
        end_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TradingSession);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TradingSession other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Begin != other.Begin) return false;
      if (End != other.End) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Begin.Length != 0) hash ^= Begin.GetHashCode();
      if (End.Length != 0) hash ^= End.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Begin.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Begin);
      }
      if (End.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(End);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Begin.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Begin);
      }
      if (End.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(End);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TradingSession other) {
      if (other == null) {
        return;
      }
      if (other.Begin.Length != 0) {
        Begin = other.Begin;
      }
      if (other.End.Length != 0) {
        End = other.End;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Begin = input.ReadString();
            break;
          }
          case 18: {
            End = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExchangeParameter : pb::IMessage<ExchangeParameter> {
    private static readonly pb::MessageParser<ExchangeParameter> _parser = new pb::MessageParser<ExchangeParameter>(() => new ExchangeParameter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExchangeParameter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.ExchangeParameterReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeParameter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeParameter(ExchangeParameter other) : this() {
      exchange_ = other.exchange_;
      sessions_ = other.sessions_.Clone();
      maturitySessions_ = other.maturitySessions_.Clone();
      holidays_ = other.holidays_.Clone();
      charmStartTime_ = other.charmStartTime_;
      rfqDelay_ = other.rfqDelay_;
      rfqTimeout_ = other.rfqTimeout_;
      rfqVolume_ = other.rfqVolume_;
      tradingDay_ = other.tradingDay_;
      nightSession_ = other.nightSession_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeParameter Clone() {
      return new ExchangeParameter(this);
    }

    /// <summary>Field number for the "exchange" field.</summary>
    public const int ExchangeFieldNumber = 1;
    private global::Proto.Exchange exchange_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.Exchange Exchange {
      get { return exchange_; }
      set {
        exchange_ = value;
      }
    }

    /// <summary>Field number for the "sessions" field.</summary>
    public const int SessionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Proto.TradingSession> _repeated_sessions_codec
        = pb::FieldCodec.ForMessage(18, global::Proto.TradingSession.Parser);
    private readonly pbc::RepeatedField<global::Proto.TradingSession> sessions_ = new pbc::RepeatedField<global::Proto.TradingSession>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.TradingSession> Sessions {
      get { return sessions_; }
    }

    /// <summary>Field number for the "maturity_sessions" field.</summary>
    public const int MaturitySessionsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Proto.TradingSession> _repeated_maturitySessions_codec
        = pb::FieldCodec.ForMessage(26, global::Proto.TradingSession.Parser);
    private readonly pbc::RepeatedField<global::Proto.TradingSession> maturitySessions_ = new pbc::RepeatedField<global::Proto.TradingSession>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.TradingSession> MaturitySessions {
      get { return maturitySessions_; }
    }

    /// <summary>Field number for the "holidays" field.</summary>
    public const int HolidaysFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Proto.Holiday> _repeated_holidays_codec
        = pb::FieldCodec.ForMessage(34, global::Proto.Holiday.Parser);
    private readonly pbc::RepeatedField<global::Proto.Holiday> holidays_ = new pbc::RepeatedField<global::Proto.Holiday>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.Holiday> Holidays {
      get { return holidays_; }
    }

    /// <summary>Field number for the "charm_start_time" field.</summary>
    public const int CharmStartTimeFieldNumber = 5;
    private string charmStartTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CharmStartTime {
      get { return charmStartTime_; }
      set {
        charmStartTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rfq_delay" field.</summary>
    public const int RfqDelayFieldNumber = 6;
    private int rfqDelay_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RfqDelay {
      get { return rfqDelay_; }
      set {
        rfqDelay_ = value;
      }
    }

    /// <summary>Field number for the "rfq_timeout" field.</summary>
    public const int RfqTimeoutFieldNumber = 7;
    private int rfqTimeout_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RfqTimeout {
      get { return rfqTimeout_; }
      set {
        rfqTimeout_ = value;
      }
    }

    /// <summary>Field number for the "rfq_volume" field.</summary>
    public const int RfqVolumeFieldNumber = 8;
    private int rfqVolume_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RfqVolume {
      get { return rfqVolume_; }
      set {
        rfqVolume_ = value;
      }
    }

    /// <summary>Field number for the "trading_day" field.</summary>
    public const int TradingDayFieldNumber = 9;
    private string tradingDay_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TradingDay {
      get { return tradingDay_; }
      set {
        tradingDay_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "night_session" field.</summary>
    public const int NightSessionFieldNumber = 10;
    private bool nightSession_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NightSession {
      get { return nightSession_; }
      set {
        nightSession_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExchangeParameter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExchangeParameter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Exchange != other.Exchange) return false;
      if(!sessions_.Equals(other.sessions_)) return false;
      if(!maturitySessions_.Equals(other.maturitySessions_)) return false;
      if(!holidays_.Equals(other.holidays_)) return false;
      if (CharmStartTime != other.CharmStartTime) return false;
      if (RfqDelay != other.RfqDelay) return false;
      if (RfqTimeout != other.RfqTimeout) return false;
      if (RfqVolume != other.RfqVolume) return false;
      if (TradingDay != other.TradingDay) return false;
      if (NightSession != other.NightSession) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Exchange != 0) hash ^= Exchange.GetHashCode();
      hash ^= sessions_.GetHashCode();
      hash ^= maturitySessions_.GetHashCode();
      hash ^= holidays_.GetHashCode();
      if (CharmStartTime.Length != 0) hash ^= CharmStartTime.GetHashCode();
      if (RfqDelay != 0) hash ^= RfqDelay.GetHashCode();
      if (RfqTimeout != 0) hash ^= RfqTimeout.GetHashCode();
      if (RfqVolume != 0) hash ^= RfqVolume.GetHashCode();
      if (TradingDay.Length != 0) hash ^= TradingDay.GetHashCode();
      if (NightSession != false) hash ^= NightSession.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Exchange != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Exchange);
      }
      sessions_.WriteTo(output, _repeated_sessions_codec);
      maturitySessions_.WriteTo(output, _repeated_maturitySessions_codec);
      holidays_.WriteTo(output, _repeated_holidays_codec);
      if (CharmStartTime.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CharmStartTime);
      }
      if (RfqDelay != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(RfqDelay);
      }
      if (RfqTimeout != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(RfqTimeout);
      }
      if (RfqVolume != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(RfqVolume);
      }
      if (TradingDay.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(TradingDay);
      }
      if (NightSession != false) {
        output.WriteRawTag(80);
        output.WriteBool(NightSession);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Exchange != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Exchange);
      }
      size += sessions_.CalculateSize(_repeated_sessions_codec);
      size += maturitySessions_.CalculateSize(_repeated_maturitySessions_codec);
      size += holidays_.CalculateSize(_repeated_holidays_codec);
      if (CharmStartTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CharmStartTime);
      }
      if (RfqDelay != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RfqDelay);
      }
      if (RfqTimeout != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RfqTimeout);
      }
      if (RfqVolume != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RfqVolume);
      }
      if (TradingDay.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TradingDay);
      }
      if (NightSession != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExchangeParameter other) {
      if (other == null) {
        return;
      }
      if (other.Exchange != 0) {
        Exchange = other.Exchange;
      }
      sessions_.Add(other.sessions_);
      maturitySessions_.Add(other.maturitySessions_);
      holidays_.Add(other.holidays_);
      if (other.CharmStartTime.Length != 0) {
        CharmStartTime = other.CharmStartTime;
      }
      if (other.RfqDelay != 0) {
        RfqDelay = other.RfqDelay;
      }
      if (other.RfqTimeout != 0) {
        RfqTimeout = other.RfqTimeout;
      }
      if (other.RfqVolume != 0) {
        RfqVolume = other.RfqVolume;
      }
      if (other.TradingDay.Length != 0) {
        TradingDay = other.TradingDay;
      }
      if (other.NightSession != false) {
        NightSession = other.NightSession;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            exchange_ = (global::Proto.Exchange) input.ReadEnum();
            break;
          }
          case 18: {
            sessions_.AddEntriesFrom(input, _repeated_sessions_codec);
            break;
          }
          case 26: {
            maturitySessions_.AddEntriesFrom(input, _repeated_maturitySessions_codec);
            break;
          }
          case 34: {
            holidays_.AddEntriesFrom(input, _repeated_holidays_codec);
            break;
          }
          case 42: {
            CharmStartTime = input.ReadString();
            break;
          }
          case 48: {
            RfqDelay = input.ReadInt32();
            break;
          }
          case 56: {
            RfqTimeout = input.ReadInt32();
            break;
          }
          case 64: {
            RfqVolume = input.ReadInt32();
            break;
          }
          case 74: {
            TradingDay = input.ReadString();
            break;
          }
          case 80: {
            NightSession = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExchangeParameterReq : pb::IMessage<ExchangeParameterReq> {
    private static readonly pb::MessageParser<ExchangeParameterReq> _parser = new pb::MessageParser<ExchangeParameterReq>(() => new ExchangeParameterReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExchangeParameterReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.ExchangeParameterReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeParameterReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeParameterReq(ExchangeParameterReq other) : this() {
      type_ = other.type_;
      parameters_ = other.parameters_.Clone();
      exchange_ = other.exchange_;
      user_ = other.user_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeParameterReq Clone() {
      return new ExchangeParameterReq(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Proto.RequestType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.RequestType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "parameters" field.</summary>
    public const int ParametersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Proto.ExchangeParameter> _repeated_parameters_codec
        = pb::FieldCodec.ForMessage(18, global::Proto.ExchangeParameter.Parser);
    private readonly pbc::RepeatedField<global::Proto.ExchangeParameter> parameters_ = new pbc::RepeatedField<global::Proto.ExchangeParameter>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.ExchangeParameter> Parameters {
      get { return parameters_; }
    }

    /// <summary>Field number for the "exchange" field.</summary>
    public const int ExchangeFieldNumber = 3;
    private global::Proto.Exchange exchange_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.Exchange Exchange {
      get { return exchange_; }
      set {
        exchange_ = value;
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 4;
    private string user_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string User {
      get { return user_; }
      set {
        user_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExchangeParameterReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExchangeParameterReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if(!parameters_.Equals(other.parameters_)) return false;
      if (Exchange != other.Exchange) return false;
      if (User != other.User) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      hash ^= parameters_.GetHashCode();
      if (Exchange != 0) hash ^= Exchange.GetHashCode();
      if (User.Length != 0) hash ^= User.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      parameters_.WriteTo(output, _repeated_parameters_codec);
      if (Exchange != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Exchange);
      }
      if (User.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(User);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      size += parameters_.CalculateSize(_repeated_parameters_codec);
      if (Exchange != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Exchange);
      }
      if (User.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(User);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExchangeParameterReq other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      parameters_.Add(other.parameters_);
      if (other.Exchange != 0) {
        Exchange = other.Exchange;
      }
      if (other.User.Length != 0) {
        User = other.User;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            type_ = (global::Proto.RequestType) input.ReadEnum();
            break;
          }
          case 18: {
            parameters_.AddEntriesFrom(input, _repeated_parameters_codec);
            break;
          }
          case 24: {
            exchange_ = (global::Proto.Exchange) input.ReadEnum();
            break;
          }
          case 34: {
            User = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExchangeParameterRep : pb::IMessage<ExchangeParameterRep> {
    private static readonly pb::MessageParser<ExchangeParameterRep> _parser = new pb::MessageParser<ExchangeParameterRep>(() => new ExchangeParameterRep());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExchangeParameterRep> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.ExchangeParameterReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeParameterRep() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeParameterRep(ExchangeParameterRep other) : this() {
      parameters_ = other.parameters_.Clone();
      Result = other.result_ != null ? other.Result.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeParameterRep Clone() {
      return new ExchangeParameterRep(this);
    }

    /// <summary>Field number for the "parameters" field.</summary>
    public const int ParametersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Proto.ExchangeParameter> _repeated_parameters_codec
        = pb::FieldCodec.ForMessage(10, global::Proto.ExchangeParameter.Parser);
    private readonly pbc::RepeatedField<global::Proto.ExchangeParameter> parameters_ = new pbc::RepeatedField<global::Proto.ExchangeParameter>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.ExchangeParameter> Parameters {
      get { return parameters_; }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 2;
    private global::Proto.Reply result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.Reply Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExchangeParameterRep);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExchangeParameterRep other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!parameters_.Equals(other.parameters_)) return false;
      if (!object.Equals(Result, other.Result)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= parameters_.GetHashCode();
      if (result_ != null) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      parameters_.WriteTo(output, _repeated_parameters_codec);
      if (result_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += parameters_.CalculateSize(_repeated_parameters_codec);
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExchangeParameterRep other) {
      if (other == null) {
        return;
      }
      parameters_.Add(other.parameters_);
      if (other.result_ != null) {
        if (result_ == null) {
          result_ = new global::Proto.Reply();
        }
        Result.MergeFrom(other.Result);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            parameters_.AddEntriesFrom(input, _repeated_parameters_codec);
            break;
          }
          case 18: {
            if (result_ == null) {
              result_ = new global::Proto.Reply();
            }
            input.ReadMessage(result_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code

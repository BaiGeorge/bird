// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Credit.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Proto {

  /// <summary>Holder for reflection information generated from Credit.proto</summary>
  public static partial class CreditReflection {

    #region Descriptor
    /// <summary>File descriptor for Credit.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CreditReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxDcmVkaXQucHJvdG8SBVByb3RvGg5FeGNoYW5nZS5wcm90bxoNUmVxdWVz",
            "dC5wcm90bxoLUmVwbHkucHJvdG8aDlN0cmF0ZWd5LnByb3RvIi4KDENyZWRp",
            "dFJlY29yZBIOCgZvcHRpb24YASABKAkSDgoGY3JlZGl0GAIgASgBIucBCgZD",
            "cmVkaXQSJQoIc3RyYXRlZ3kYASABKA4yEy5Qcm90by5TdHJhdGVneVR5cGUS",
            "EgoKdW5kZXJseWluZxgCIAEoCRIQCghtYXR1cml0eRgDIAEoCRINCgVkZWx0",
            "YRgEIAEoARIMCgR2ZWdhGAUgASgBEgwKBHNrZXcYBiABKAESDgoGY29udmV4",
            "GAcgASgBEgwKBGNhc2gYCCABKAESDQoFcHJpY2UYCSABKAESEgoKbXVsdGlw",
            "bGllchgKIAEoARIkCgdyZWNvcmRzGAsgAygLMhMuUHJvdG8uQ3JlZGl0UmVj",
            "b3JkIn4KCUNyZWRpdFJlcRIgCgR0eXBlGAEgASgOMhIuUHJvdG8uUmVxdWVz",
            "dFR5cGUSIQoIZXhjaGFuZ2UYAiABKA4yDy5Qcm90by5FeGNoYW5nZRIeCgdj",
            "cmVkaXRzGAMgAygLMg0uUHJvdG8uQ3JlZGl0EgwKBHVzZXIYBCABKAkiSQoJ",
            "Q3JlZGl0UmVwEh4KB2NyZWRpdHMYASADKAsyDS5Qcm90by5DcmVkaXQSHAoG",
            "cmVzdWx0GAIgASgLMgwuUHJvdG8uUmVwbHliBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Proto.ExchangeReflection.Descriptor, global::Proto.RequestReflection.Descriptor, global::Proto.ReplyReflection.Descriptor, global::Proto.StrategyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.CreditRecord), global::Proto.CreditRecord.Parser, new[]{ "Option", "Credit" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Credit), global::Proto.Credit.Parser, new[]{ "Strategy", "Underlying", "Maturity", "Delta", "Vega", "Skew", "Convex", "Cash", "Price", "Multiplier", "Records" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.CreditReq), global::Proto.CreditReq.Parser, new[]{ "Type", "Exchange", "Credits", "User" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.CreditRep), global::Proto.CreditRep.Parser, new[]{ "Credits", "Result" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CreditRecord : pb::IMessage<CreditRecord> {
    private static readonly pb::MessageParser<CreditRecord> _parser = new pb::MessageParser<CreditRecord>(() => new CreditRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreditRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.CreditReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreditRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreditRecord(CreditRecord other) : this() {
      option_ = other.option_;
      credit_ = other.credit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreditRecord Clone() {
      return new CreditRecord(this);
    }

    /// <summary>Field number for the "option" field.</summary>
    public const int OptionFieldNumber = 1;
    private string option_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Option {
      get { return option_; }
      set {
        option_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "credit" field.</summary>
    public const int CreditFieldNumber = 2;
    private double credit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Credit {
      get { return credit_; }
      set {
        credit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreditRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreditRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Option != other.Option) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Credit, other.Credit)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Option.Length != 0) hash ^= Option.GetHashCode();
      if (Credit != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Credit);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Option.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Option);
      }
      if (Credit != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Credit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Option.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Option);
      }
      if (Credit != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreditRecord other) {
      if (other == null) {
        return;
      }
      if (other.Option.Length != 0) {
        Option = other.Option;
      }
      if (other.Credit != 0D) {
        Credit = other.Credit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Option = input.ReadString();
            break;
          }
          case 17: {
            Credit = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Credit : pb::IMessage<Credit> {
    private static readonly pb::MessageParser<Credit> _parser = new pb::MessageParser<Credit>(() => new Credit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Credit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.CreditReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Credit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Credit(Credit other) : this() {
      strategy_ = other.strategy_;
      underlying_ = other.underlying_;
      maturity_ = other.maturity_;
      delta_ = other.delta_;
      vega_ = other.vega_;
      skew_ = other.skew_;
      convex_ = other.convex_;
      cash_ = other.cash_;
      price_ = other.price_;
      multiplier_ = other.multiplier_;
      records_ = other.records_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Credit Clone() {
      return new Credit(this);
    }

    /// <summary>Field number for the "strategy" field.</summary>
    public const int StrategyFieldNumber = 1;
    private global::Proto.StrategyType strategy_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.StrategyType Strategy {
      get { return strategy_; }
      set {
        strategy_ = value;
      }
    }

    /// <summary>Field number for the "underlying" field.</summary>
    public const int UnderlyingFieldNumber = 2;
    private string underlying_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Underlying {
      get { return underlying_; }
      set {
        underlying_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "maturity" field.</summary>
    public const int MaturityFieldNumber = 3;
    private string maturity_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Maturity {
      get { return maturity_; }
      set {
        maturity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "delta" field.</summary>
    public const int DeltaFieldNumber = 4;
    private double delta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Delta {
      get { return delta_; }
      set {
        delta_ = value;
      }
    }

    /// <summary>Field number for the "vega" field.</summary>
    public const int VegaFieldNumber = 5;
    private double vega_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Vega {
      get { return vega_; }
      set {
        vega_ = value;
      }
    }

    /// <summary>Field number for the "skew" field.</summary>
    public const int SkewFieldNumber = 6;
    private double skew_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Skew {
      get { return skew_; }
      set {
        skew_ = value;
      }
    }

    /// <summary>Field number for the "convex" field.</summary>
    public const int ConvexFieldNumber = 7;
    private double convex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Convex {
      get { return convex_; }
      set {
        convex_ = value;
      }
    }

    /// <summary>Field number for the "cash" field.</summary>
    public const int CashFieldNumber = 8;
    private double cash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Cash {
      get { return cash_; }
      set {
        cash_ = value;
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 9;
    private double price_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    /// <summary>Field number for the "multiplier" field.</summary>
    public const int MultiplierFieldNumber = 10;
    private double multiplier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Multiplier {
      get { return multiplier_; }
      set {
        multiplier_ = value;
      }
    }

    /// <summary>Field number for the "records" field.</summary>
    public const int RecordsFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Proto.CreditRecord> _repeated_records_codec
        = pb::FieldCodec.ForMessage(90, global::Proto.CreditRecord.Parser);
    private readonly pbc::RepeatedField<global::Proto.CreditRecord> records_ = new pbc::RepeatedField<global::Proto.CreditRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.CreditRecord> Records {
      get { return records_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Credit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Credit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Strategy != other.Strategy) return false;
      if (Underlying != other.Underlying) return false;
      if (Maturity != other.Maturity) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Delta, other.Delta)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Vega, other.Vega)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Skew, other.Skew)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Convex, other.Convex)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Cash, other.Cash)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Price, other.Price)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Multiplier, other.Multiplier)) return false;
      if(!records_.Equals(other.records_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Strategy != 0) hash ^= Strategy.GetHashCode();
      if (Underlying.Length != 0) hash ^= Underlying.GetHashCode();
      if (Maturity.Length != 0) hash ^= Maturity.GetHashCode();
      if (Delta != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Delta);
      if (Vega != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Vega);
      if (Skew != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Skew);
      if (Convex != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Convex);
      if (Cash != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Cash);
      if (Price != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Price);
      if (Multiplier != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Multiplier);
      hash ^= records_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Strategy != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Strategy);
      }
      if (Underlying.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Underlying);
      }
      if (Maturity.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Maturity);
      }
      if (Delta != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Delta);
      }
      if (Vega != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Vega);
      }
      if (Skew != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(Skew);
      }
      if (Convex != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(Convex);
      }
      if (Cash != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(Cash);
      }
      if (Price != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(Price);
      }
      if (Multiplier != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(Multiplier);
      }
      records_.WriteTo(output, _repeated_records_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Strategy != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Strategy);
      }
      if (Underlying.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Underlying);
      }
      if (Maturity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Maturity);
      }
      if (Delta != 0D) {
        size += 1 + 8;
      }
      if (Vega != 0D) {
        size += 1 + 8;
      }
      if (Skew != 0D) {
        size += 1 + 8;
      }
      if (Convex != 0D) {
        size += 1 + 8;
      }
      if (Cash != 0D) {
        size += 1 + 8;
      }
      if (Price != 0D) {
        size += 1 + 8;
      }
      if (Multiplier != 0D) {
        size += 1 + 8;
      }
      size += records_.CalculateSize(_repeated_records_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Credit other) {
      if (other == null) {
        return;
      }
      if (other.Strategy != 0) {
        Strategy = other.Strategy;
      }
      if (other.Underlying.Length != 0) {
        Underlying = other.Underlying;
      }
      if (other.Maturity.Length != 0) {
        Maturity = other.Maturity;
      }
      if (other.Delta != 0D) {
        Delta = other.Delta;
      }
      if (other.Vega != 0D) {
        Vega = other.Vega;
      }
      if (other.Skew != 0D) {
        Skew = other.Skew;
      }
      if (other.Convex != 0D) {
        Convex = other.Convex;
      }
      if (other.Cash != 0D) {
        Cash = other.Cash;
      }
      if (other.Price != 0D) {
        Price = other.Price;
      }
      if (other.Multiplier != 0D) {
        Multiplier = other.Multiplier;
      }
      records_.Add(other.records_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            strategy_ = (global::Proto.StrategyType) input.ReadEnum();
            break;
          }
          case 18: {
            Underlying = input.ReadString();
            break;
          }
          case 26: {
            Maturity = input.ReadString();
            break;
          }
          case 33: {
            Delta = input.ReadDouble();
            break;
          }
          case 41: {
            Vega = input.ReadDouble();
            break;
          }
          case 49: {
            Skew = input.ReadDouble();
            break;
          }
          case 57: {
            Convex = input.ReadDouble();
            break;
          }
          case 65: {
            Cash = input.ReadDouble();
            break;
          }
          case 73: {
            Price = input.ReadDouble();
            break;
          }
          case 81: {
            Multiplier = input.ReadDouble();
            break;
          }
          case 90: {
            records_.AddEntriesFrom(input, _repeated_records_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreditReq : pb::IMessage<CreditReq> {
    private static readonly pb::MessageParser<CreditReq> _parser = new pb::MessageParser<CreditReq>(() => new CreditReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreditReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.CreditReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreditReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreditReq(CreditReq other) : this() {
      type_ = other.type_;
      exchange_ = other.exchange_;
      credits_ = other.credits_.Clone();
      user_ = other.user_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreditReq Clone() {
      return new CreditReq(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Proto.RequestType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.RequestType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "exchange" field.</summary>
    public const int ExchangeFieldNumber = 2;
    private global::Proto.Exchange exchange_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.Exchange Exchange {
      get { return exchange_; }
      set {
        exchange_ = value;
      }
    }

    /// <summary>Field number for the "credits" field.</summary>
    public const int CreditsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Proto.Credit> _repeated_credits_codec
        = pb::FieldCodec.ForMessage(26, global::Proto.Credit.Parser);
    private readonly pbc::RepeatedField<global::Proto.Credit> credits_ = new pbc::RepeatedField<global::Proto.Credit>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.Credit> Credits {
      get { return credits_; }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 4;
    private string user_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string User {
      get { return user_; }
      set {
        user_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreditReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreditReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Exchange != other.Exchange) return false;
      if(!credits_.Equals(other.credits_)) return false;
      if (User != other.User) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Exchange != 0) hash ^= Exchange.GetHashCode();
      hash ^= credits_.GetHashCode();
      if (User.Length != 0) hash ^= User.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Exchange != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Exchange);
      }
      credits_.WriteTo(output, _repeated_credits_codec);
      if (User.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(User);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Exchange != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Exchange);
      }
      size += credits_.CalculateSize(_repeated_credits_codec);
      if (User.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(User);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreditReq other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Exchange != 0) {
        Exchange = other.Exchange;
      }
      credits_.Add(other.credits_);
      if (other.User.Length != 0) {
        User = other.User;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            type_ = (global::Proto.RequestType) input.ReadEnum();
            break;
          }
          case 16: {
            exchange_ = (global::Proto.Exchange) input.ReadEnum();
            break;
          }
          case 26: {
            credits_.AddEntriesFrom(input, _repeated_credits_codec);
            break;
          }
          case 34: {
            User = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreditRep : pb::IMessage<CreditRep> {
    private static readonly pb::MessageParser<CreditRep> _parser = new pb::MessageParser<CreditRep>(() => new CreditRep());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreditRep> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.CreditReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreditRep() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreditRep(CreditRep other) : this() {
      credits_ = other.credits_.Clone();
      Result = other.result_ != null ? other.Result.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreditRep Clone() {
      return new CreditRep(this);
    }

    /// <summary>Field number for the "credits" field.</summary>
    public const int CreditsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Proto.Credit> _repeated_credits_codec
        = pb::FieldCodec.ForMessage(10, global::Proto.Credit.Parser);
    private readonly pbc::RepeatedField<global::Proto.Credit> credits_ = new pbc::RepeatedField<global::Proto.Credit>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.Credit> Credits {
      get { return credits_; }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 2;
    private global::Proto.Reply result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.Reply Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreditRep);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreditRep other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!credits_.Equals(other.credits_)) return false;
      if (!object.Equals(Result, other.Result)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= credits_.GetHashCode();
      if (result_ != null) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      credits_.WriteTo(output, _repeated_credits_codec);
      if (result_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += credits_.CalculateSize(_repeated_credits_codec);
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreditRep other) {
      if (other == null) {
        return;
      }
      credits_.Add(other.credits_);
      if (other.result_ != null) {
        if (result_ == null) {
          result_ = new global::Proto.Reply();
        }
        Result.MergeFrom(other.Result);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            credits_.AddEntriesFrom(input, _repeated_credits_codec);
            break;
          }
          case 18: {
            if (result_ == null) {
              result_ = new global::Proto.Reply();
            }
            input.ReadMessage(result_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
